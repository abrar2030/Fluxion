apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-default-deny-all
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-frontend-policy
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.appName }}-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: {{ .Values.frontend.containerPort | default 3000 }}
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow communication to backend
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-backend
    ports:
    - protocol: TCP
      port: {{ .Values.backend.containerPort | default 8000 }}
  # Allow HTTPS outbound for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-backend-policy
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.appName }}-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from frontend
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-frontend
    ports:
    - protocol: TCP
      port: {{ .Values.backend.containerPort | default 8000 }}
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: {{ .Values.backend.containerPort | default 8000 }}
  # Allow traffic from monitoring (Prometheus)
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: {{ .Values.backend.metricsPort | default 9090 }}
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow communication to database
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-database
    ports:
    - protocol: TCP
      port: 3306
  # Allow communication to Redis
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow HTTPS outbound for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow communication to Vault for secrets
  - to: []
    ports:
    - protocol: TCP
      port: 8200
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-database-policy
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.appName }}-database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from backend only
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-backend
    ports:
    - protocol: TCP
      port: 3306
  # Allow traffic from backup jobs
  - from:
    - podSelector:
        matchLabels:
          job-name: {{ .Values.appName }}-db-backup
    ports:
    - protocol: TCP
      port: 3306
  # Allow traffic from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 3306
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow NTP for time synchronization
  - to: []
    ports:
    - protocol: UDP
      port: 123
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-redis-policy
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.appName }}-redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from backend only
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.appName }}-backend
    ports:
    - protocol: TCP
      port: 6379
  # Allow traffic from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 6379
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-monitoring-policy
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.appName }}-monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000  # Grafana
    - protocol: TCP
      port: 9090  # Prometheus
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow scraping metrics from all pods
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 6379

