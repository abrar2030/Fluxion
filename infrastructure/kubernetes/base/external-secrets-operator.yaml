apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-system
  labels:
    name: external-secrets-system
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: {{ .Values.namespace | default "default" }}
spec:
  provider:
    vault:
      server: {{ .Values.vault.server | default "https://vault.fluxion.local:8200" }}
      path: {{ .Values.vault.path | default "secret" }}
      version: {{ .Values.vault.version | default "v2" }}
      auth:
        kubernetes:
          mountPath: {{ .Values.vault.auth.kubernetes.mountPath | default "kubernetes" }}
          role: {{ .Values.vault.auth.kubernetes.role | default "fluxion-role" }}
          serviceAccountRef:
            name: {{ .Values.vault.auth.kubernetes.serviceAccount | default "external-secrets-sa" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.appName }}-database-secrets
  namespace: {{ .Values.namespace | default "default" }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: {{ .Values.appName }}-database-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        database-url: "mysql://{{ "{{ .username }}" }}:{{ "{{ .password }}" }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
        username: "{{ "{{ .username }}" }}"
        password: "{{ "{{ .password }}" }}"
  data:
  - secretKey: username
    remoteRef:
      key: {{ .Values.vault.secrets.database.path | default "database/fluxion" }}
      property: username
  - secretKey: password
    remoteRef:
      key: {{ .Values.vault.secrets.database.path | default "database/fluxion" }}
      property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.appName }}-app-secrets
  namespace: {{ .Values.namespace | default "default" }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: {{ .Values.appName }}-app-secrets
    creationPolicy: Owner
    template:
      type: Opaque
  data:
  - secretKey: jwt-secret
    remoteRef:
      key: {{ .Values.vault.secrets.app.path | default "app/fluxion" }}
      property: jwt-secret
  - secretKey: api-key
    remoteRef:
      key: {{ .Values.vault.secrets.app.path | default "app/fluxion" }}
      property: api-key
  - secretKey: encryption-key
    remoteRef:
      key: {{ .Values.vault.secrets.app.path | default "app/fluxion" }}
      property: encryption-key
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: {{ .Values.namespace | default "default" }}
  annotations:
    vault.hashicorp.com/role: {{ .Values.vault.auth.kubernetes.role | default "fluxion-role" }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-controller
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "update", "delete", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["external-secrets.io"]
  resources: ["secretstores", "externalsecrets", "clustersecretstores", "clusterexternalsecrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["external-secrets.io"]
  resources: ["externalsecrets/status", "externalsecrets/finalizers"]
  verbs: ["update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-controller
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: {{ .Values.namespace | default "default" }}

