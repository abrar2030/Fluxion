apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace | default "fluxion" }}
  labels:
    name: {{ .Values.namespace | default "fluxion" }}
    # Enforce restricted Pod Security Standards
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
    # Financial compliance labels
    compliance.fluxion.io/level: "financial"
    security.fluxion.io/classification: "restricted"
---
# Pod Security Policy (if PSP is still in use)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Values.appName }}-restricted-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true
  seLinux:
    rule: 'RunAsAny'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.appName }}-psp-user
  namespace: {{ .Values.namespace | default "default" }}
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - {{ .Values.appName }}-restricted-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.appName }}-psp-binding
  namespace: {{ .Values.namespace | default "default" }}
roleRef:
  kind: Role
  name: {{ .Values.appName }}-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ .Values.appName }}-frontend-sa
  namespace: {{ .Values.namespace | default "default" }}
- kind: ServiceAccount
  name: {{ .Values.appName }}-backend-sa
  namespace: {{ .Values.namespace | default "default" }}
- kind: ServiceAccount
  name: {{ .Values.appName }}-database-sa
  namespace: {{ .Values.namespace | default "default" }}
- kind: ServiceAccount
  name: {{ .Values.appName }}-redis-sa
  namespace: {{ .Values.namespace | default "default" }}
---
# Network Policy for namespace isolation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.appName }}-namespace-isolation
  namespace: {{ .Values.namespace | default "default" }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.namespace | default "default" }}
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  # Allow traffic from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow traffic to same namespace
  - to:
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.namespace | default "default" }}
  # Allow HTTPS outbound
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow Vault communication
  - to: []
    ports:
    - protocol: TCP
      port: 8200

